{"name":"Selective Search for Object Recognition","tagline":"by Omar Rahman","body":"### Summary\r\n\r\nI am going to implement a parallel selective search algorithm for object recognition in images.\r\n\r\n### Background\r\n\r\nOne major requirement of an object recognition system is a high quality set of object hypotheses that describe locations for potential objects to be recognized. [This paper](https://ivi.fnwi.uva.nl/isis/publications/2013/UijlingsIJCV2013/UijlingsIJCV2013.pdf) suggests a bottom up, hierarchical approach to the problem by taking segments of an image and greedily combining neighboring segments using various diversification and similarity strategies. [Another paper](http://research.microsoft.com/pubs/220569/ZitnickDollarECCV14edgeBoxes.pdf) proposes a method using \"edge boxes\", in which the number of contours wholly contained in an edge box indicates the likelihood that it contains an object.  \r\n\r\n### Challenges\r\n\r\nThe first challenge is to determine which method to employ, a decision which will likely be based largely on the amount of parallelism I can exploit from it.\r\nIn hierarchical approach, there is potential for parallelism here since we can spatially decompose the problem by considering pairs of segments in parallel; however, this will likely not produce the exact same results as the sequential greedy algorithm. Thus, one challenge will be to determine whether this relaxation of the algorithm actually matters. \r\n\r\n### Resources\r\n\r\nSince image regions provide richer features than individual pixels, Uijlings et al. perform image segmentation using a fast method proposed in [this paper](http://cs.brown.edu/~pff/papers/seg-ijcv.pdf). Luckily, this paper provides a C++ implementation of their algorithm, which I hope to use as a starting point for my implementation of selective search.\r\n\r\n### Goals and Deliverables\r\n\r\nI hope to complete a working implementation of selective search, which will, given an image, output an image with object proposals bound in boxes. I will first implement the sequential version as proposed in the paper and then implement a parallel version. I'll need some way to evaluate the parallel implementation, since its result will likely differ from the sequential version. Also, if time permits, I will attempt to speed up the image segmentation preprocessing step.\r\n\r\n### Platform Choice\r\n\r\nI have not yet decided on what platform I will run on, maybe CUDA. I will have to think more carefully about the parallelism involved before committing to a platform.\r\n\r\n### Proposed Schedule\r\n\r\n4/2 - 4/9 : Study papers and implement sequential algorithm \r\n4/9 - 4/16 (Checkpoint): Decide on platform and begin parallel implementation \r\n4/16 - 4/23: Continue parallel implementation\r\n4/23 - 4/30: Finish parallel implementation and establish evaluation metrics\r\n4/30 - 5/7: Perform evaluations and complete final write up\r\n5/7 - 5/10: Buffer\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}